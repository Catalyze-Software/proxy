name: Build
description: Build the Rust canister

inputs:
  lint:
    description: Run lint with clippy and rustfmt
    required: true
  test:
    description: Run tests with cargo test
    required: true
  version:
    description: Version of the output gzip wasm file
    required: false
    default: ${{ github.sha }}
  package:
    description: Rust package name to build
    required: false
    default: 'canister'
  test_package:
    description: Rust test package name to run tests
    required: false
    default: 'tests'

runs:
  using: composite
  steps:
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: wasm32-unknown-unknown
        components: rustfmt, clippy

    - name: Setup Cache
      uses: Swatinem/rust-cache@v2

    - name: rustfmt
      shell: bash
      if: ${{ inputs.lint == 'true' }}
      env:
        CARGO_TERM_COLOR: always
        RUSTFLAGS: "-D warnings"
      run: cargo fmt -- --check

    - name: clippy
      shell: bash
      if: ${{ inputs.lint == 'true' }}
      env:
        CARGO_TERM_COLOR: always
        RUSTFLAGS: "-D warnings"
      run: cargo clippy

    - name: Build
      shell: bash
      env:
        CARGO_TERM_COLOR: always
        RUSTFLAGS: "-D warnings"
        CARGO_BUILD_TARGET: wasm32-unknown-unknown
      run: cargo build -p ${{ inputs.package }} --release

    - name: Gzip Wasm
      shell: bash
      run: |
        mkdir wasm
        gzip -c target/wasm32-unknown-unknown/release/${{ inputs.package }}.wasm > wasm/${{ inputs.package }}_${{ inputs.version }}.wasm.gz
        cp target/wasm32-unknown-unknown/release/${{ inputs.package }}.wasm wasm/${{ inputs.package }}_${{ inputs.version }}.wasm

    - name: PocketIC
      shell: bash
      if: ${{ inputs.test == 'true' }}
      run: |
        curl -LJO https://github.com/dfinity/pocketic/releases/download/4.0.0/pocket-ic-x86_64-linux.gz
        gzip -d pocket-ic-x86_64-linux.gz
        sudo mv pocket-ic-x86_64-linux /usr/local/bin/pocket-ic
        chmod +x /usr/local/bin/pocket-ic
        pocket-ic --help
        POCKET_IC_BIN="/usr/local/bin/pocket-ic"
        echo "POCKET_IC_BIN=$POCKET_IC_BIN" >> $GITHUB_ENV

    - name: Tests
      shell: bash
      if: ${{ inputs.test == 'true' }}
      env:
        CARGO_TERM_COLOR: always
        RUSTFLAGS: "-D warnings"
        WASM_PATH: ../wasm/${{ inputs.package }}_${{ inputs.version }}.wasm.gz
      run: cargo test -p ${{ inputs.test_package }} -- --nocapture

